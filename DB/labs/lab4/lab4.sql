--lab4
    --#1    
        SELECT FILE_NAME,TABLESPACE_NAME,STATUS,MAXBYTES,USER_BYTES FROM DBA_DATA_FILES
        UNION
        SELECT FILE_NAME,TABLESPACE_NAME,STATUS,MAXBYTES,USER_BYTES FROM DBA_TEMP_FILES;
        DROP TABLESPACE SVA_QDATA INCLUDING CONTENTS AND DATAFILES;
    --#2
        CREATE TABLESPACE SVA_QDATA
            DATAFILE 'SVA_QDATA1.DBF'
            SIZE 4M
            AUTOEXTEND ON NEXT 2M
            MAXSIZE 10M
            LOGGING
            OFFLINE
            EXTENT MANAGEMENT LOCAL;
        ALTER TABLESPACE SVA_QDATA ONLINE;
        
        SELECT * FROM DBA_USERS ORDER BY CREATED DESC;
        
        ALTER USER C##SVA QUOTA 2M ON SVA_QDATA;
        GRANT RESOURCE to C##SVA;

        CREATE TABLE SSSS(
            ID INT PRIMARY KEY,
            DATA VARCHAR(50)
        )TABLESPACE SVA_QDATA;
        DROP TABLE SSSS PURGE;
        
        INSERT INTO SSSS VALUES(0,'SOMETHING INTERESTING');
        INSERT INTO SSSS VALUES(1,'MORE INTERESTING');
        INSERT INTO SSSS VALUES(2,'THE MOST INTERESTING INF');
    --#3
        SELECT OWNER,SEGMENT_NAME,SEGMENT_TYPE,TABLESPACE_NAME,BYTES,BLOCKS,BUFFER_POOL FROM DBA_SEGMENTS 
            WHERE TABLESPACE_NAME ='SVA_QDATA';
        
        SELECT OWNER,SEGMENT_NAME,SEGMENT_TYPE,TABLESPACE_NAME,BYTES,BLOCKS,BUFFER_POOL FROM DBA_SEGMENTS;
    --#4
        DROP TABLE SSSS;
        SELECT OWNER,SEGMENT_NAME,SEGMENT_TYPE,TABLESPACE_NAME,BYTES,BLOCKS,BUFFER_POOL FROM DBA_SEGMENTS 
            WHERE TABLESPACE_NAME ='SVA_QDATA';
            
        SELECT *FROM user_recyclebin;
    --#5
        FLASHBACK TABLE SSSS TO BEFORE DROP;
        
        SELECT OWNER,SEGMENT_NAME,SEGMENT_TYPE,TABLESPACE_NAME,BYTES,BLOCKS,BUFFER_POOL FROM DBA_SEGMENTS 
            WHERE TABLESPACE_NAME ='SVA_QDATA';
            
        SELECT *FROM user_recyclebin;
    --#6
        BEGIN
            FOR COUNTER IN 1..1000
            LOOP
                INSERT INTO SSSS VALUES(COUNTER+2,'SSS');
            END LOOP;
        END;
        SELECT * FROM SSSS;
    --#7
        SELECT SEGMENT_NAME,SEGMENT_TYPE,TABLESPACE_NAME,BYTES,BLOCKS,EXTENTS,BUFFER_POOL FROM USER_SEGMENTS WHERE TABLESPACE_NAME = 'SVA_QDATA';
    --#8
        DROP TABLESPACE SVA_QDATA INCLUDING CONTENTS AND DATAFILES;
    --#9 œŒƒ Àﬁ◊≈Õ»≈   CDB
        SELECT GROUP#,STATUS,MEMBERS FROM V$LOG;
        SELECT * FROM V$LOG;
    --#10
        SELECT * FROM V$LOGFILE; 
    --#11
        ALTER SYSTEM SWITCH LOGFILE;
        SELECT GROUP#,SEQUENCE#,BYTES,FIRST_CHANGE#,STATUS,MEMBERS FROM V$LOG;
        
        SELECT SESSIONTIMEZONE, CURRENT_TIMESTAMP FROM DUAL;
        SET SERVEROUTPUT ON;
        DECLARE CURRENT_TIME_OF_SELECT VARCHAR(40);
        BEGIN 
            SELECT CURRENT_TIMESTAMP INTO CURRENT_TIME_OF_SELECT FROM DUAL;
            DBMS_OUTPUT.PUT_LINE(CURRENT_TIME_OF_SELECT);
        END;
        
    --#12
        ALTER DATABASE ADD LOGFILE GROUP 3 
            ('SVA1.LOG',
            'SVA2.LOG',
            'SVA3.LOG') ;--SIZE 50M BLOCKSIZE 512;
        
        
        SELECT GROUP#,SEQUENCE#,BYTES,FIRST_CHANGE#,STATUS,MEMBERS FROM V$LOG;

        SELECT * FROM V$LOGFILE; 

        ALTER SYSTEM SWITCH LOGFILE;
        SELECT GROUP#,SEQUENCE#,BYTES,FIRST_CHANGE#,STATUS,MEMBERS FROM V$LOG;
    --#13(alter system checkpoint; - to do an ensuring checkpoint (CKPT), it 
    --will trigger the database writer (DBWn) process to write all changes 
    --in redo logs write into data files.)(bez nee uletit oracle naher)
        ALTER DATABASE DROP LOGFILE MEMBER 'SVA1.LOG';
        ALTER DATABASE DROP LOGFILE MEMBER 'SVA2.LOG';
        ALTER DATABASE DROP LOGFILE MEMBER 'SVA3.LOG';
        ALTER DATABASE DROP LOGFILE GROUP 3;
        
    --#14
        SELECT NAME, LOG_MODE FROM V$DATABASE;
    --#15
        ARCHIVE LOG LIST;
    --#16
        SELECT *FROM V$LOG;
        SELECT *FROM V$ARCHIVED_LOG;
    --#17
        ALTER SYSTEM SWITCH LOGFILE;
    --#19
        SELECT NAME FROM V$CONTROLFILE;
    --#20
        SELECT TYPE,RECORD_SIZE,RECORDS_TOTAL FROM V$CONTROLFILE_RECORD_SECTION;
        SHOW PARAMETER CONTROL;
    --#21 init.ora
    --#22
        CREATE PFILE = 'SVA_PFILE.ORA' FROM SPFILE;
    --#23 PWDcdbtest1
    --#24
        SELECT * FROM V$DIAG_INFO;
    --#25 --LOG.XML
        